server:
  port: 8091

management:
  endpoint:
    health:
      show-details: always
  endpoints.web:
    exposure:
      include: info, health, metrics, prometheus
    base-path: "/internal"
  metrics:
    export:
      prometheus:
        enabled: true
    web:
      server:
        request:
          autotime:
            enabled: true
kafka:
  applicationId: ${KAFKA_STREAMS_APPLICATION_ID}
  brokers: ${KAFKA_BROKERS}
  bootstrappingTimeout: ${BOOTSTRAPPING_TIMEOUT}
  delayBeforeKafkaInitialization: ${DELAY_BEFORE_KAFKA_INITIALIZATION}
  security:
    enabled: ${KAFKA_SECURITY}
    protocol: SSL
    keyStoreType: PKCS12
    keyStorePath: ${KAFKA_KEYSTORE_PATH}
    keyStorePassword: ${KAFKA_CREDSTORE_PASSWORD}
    trustStorePath: ${KAFKA_TRUSTSTORE_PATH}
    trustStorePassword: ${KAFKA_CREDSTORE_PASSWORD}
  topics:
    mainTopic: ${KAFKA_MAIN_TOPIC}
    processingTopic: ${KAFKA_PROCESSING_TOPIC}
    messageTopic: ${KAFKA_MESSAGE_TOPIC}
    metricsTopic: ${KAFKA_METRICS_TOPIC}
  schemaRegistry:
    url: ${KAFKA_SCHEMA_REGISTRY}
    username: ${KAFKA_SCHEMA_REGISTRY_USER}
    password: ${KAFKA_SCHEMA_REGISTRY_PASSWORD}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha

---
spring:
  config:
    activate:
      on-profile: test

no.nav.security.jwt:
  issuer:
    someshortname:
      discoveryurl: http://metadata
      accepted_audience: aud-localhost
      cookie_name: localhost-idtoken
    azuread:
      discoveryurl: http://metadata
      accepted_audience: aud-localhost
      cookie_name: localhost-idtoken

  client:
    registration:
      soknadsarkiverer:
        token-endpoint-url: http://localhost:8181/oauth2/v2.0/token
        grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
        scope: scope1
        authentication:
          client-id: testclient
          client-secret: testsecret
          client-auth-method: client_secret_basic

---
spring:
  config:
    activate:
      on-profile: spring | default | dev | prod

no.nav.security.jwt:
  issuer.azuread:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}
      cookie_name: azure_token
  client:
    registration:
      soknadsarkiverer:
        token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
        grant-type: client_credentials
        scope: ${DOKARKIV_SCOPE}
        authentication:
          client-id: ${AZURE_APP_CLIENT_ID}
          client-secret: ${AZURE_APP_CLIENT_SECRET}
          client-auth-method: client_secret_basic
